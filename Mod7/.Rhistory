install.packages('RMySQL')
install.packages('ggplot2')
install.packages('dbplyr')
install.packages('RMySQL')
install.packages('RMySQL')
library(RMySQL)
library(ggplot2)
library(dbplyr)
con = dbConnect(MySQL(),user = 'root', password='root',dbname='titanic',host='localhost')
dbGetQuery(con, query)
con = dbConnect(MySQL(),user = 'root', password='root',dbname='titanic',host='localhost')
query <- "select pclass, survived, avg(age) as media_idade WHERE survived = 1 GROUP BY survived"
dbGetQuery(con, query)
query <- "select pclass, survived, avg(age) as media_idade FROM titanic.titanic WHERE survived = 1 GROUP BY survived"
dados <- dbGetQuery(con, query)
ggplot(dados,aes(pclass, media_idade)+ geom_bar(stat="identity"))
query <- "select pclass, survived, avg(age) as media_idade FROM titanic.titanic WHERE survived = 1 GROUP BY pclass,survived"
dados <- dbGetQuery(con, query)
head(dados)
ggplot(dados,aes(pclass, media_idade)+ geom_bar(stat="identity"))
ggplot(dados,aes(pclass, media_idade))+ geom_bar(stat="identity")
ggplot(dados,aes(pclass, media_idade))
ggplot(dados,aes(pclass, media_idade))+ geom_bar(stat="identity")
con2 = src_mysql(MySQL(),user = 'root', password='root',dbname='titanic',host='localhost')
con2 = src_mysql(user = 'root', password='root',dbname='titanic',host='localhost')
library(dplyr)
con2 = src_mysql(user = 'root', password='root',dbname='titanic',host='localhost')
collect()
dados2 <- %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
dados2 <-
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
dados2 <- tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
dados2 <-
con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
head(dados2)
?summarise
con2 = src_mysql(user = 'root', password='root',dbname='titanic',host='localhost')
dados2 <-
con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
dados2 <-
con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
dados2 <- con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
dados2 <- con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
install.packages('RMySQL')
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
library(ggplot2)
library(dbplyr)
library(dplyr)
dados2 <- con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
con2 = src_mysql(user = 'root', password='root',dbname='titanic',host='localhost')
dados2 <- con2  %>%
tbl('titanic') %>%
select(pclass,sex,survived) %>%
group_by(pclass,sex) %>%
summarise(survavival_ratio = avg(survived)) %>%
collect()
View(dados2)
install.packages('devtools')
library(devtools)
install_github('mongosoup/rmongodb')
mongo <- mongo.create()
library(rmongodb)
mongo <- mongo.create()
mongo.is.connected(mongo)
if(mongo.is.connected(mongo)){
mongo.get.databases()
}
mongo.get.databases(mongo)
colecao <- "users.contatos"
mongo.count(colecao)
mongo.count(mongo,colecao)
res <- mongo.distinct(mongo,colecao,"city")
headr(res)
head(res)
typeof(res)
mongo.find.one(mongo,colecao)
resOne <- mongo.find.one(mongo,colecao)
View(resOne)
head(resOne)
resOne <- mongo.find.one(mongo,colecao)
head(resOne)
resOne <- mongo.find.one(mongo,colecao)
head(resOne)
print(resOne)
mongo.destroy(mongo)
# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
# Não use diretórios com espaço no nome
setwd("~/projects/DataScience/FCD/RAzureML/big_data_r_azure/Mod7")
getwd()
library(hflights)
library(dplyr)
?hflights
# Criando um objeto tbl
?tbl_df
flights <- tbl_df(hflights)
flights
View(flights)
# Resumindo os dados
str(hflights)
glimpse(hflights)
# Filtrando os dados com slice
flights[1,1]
# Filtrando os dados com slice
flights[1,1]
flights[flights$Month == 1 & flights$DayofMonth == 1, ]
# Aplicando filter
filter(flights, Month == 1, DayofMonth == 1)
filter(flights, UniqueCarrier == "AA" | UniqueCarrier == "UA")
filter(flights, UniqueCarrier %in% c("AA", "UA"))
# Select
select(flights, Year:DayofMonth, contains("Taxi"), contains("Delay"))
?tally
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE)
?gather
??gather
?gather
library(tidyr)
?gather
# Reshape2
install.packages("reshape2")
# Split-Apply-Combine
?ddply
library(plyr)
library(gapminder)
# Split-Apply-Combine
?ddply
